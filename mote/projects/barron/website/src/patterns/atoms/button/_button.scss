// ==========================================
// ** Block Button
// ==========================================

.Button {
    // This variable contains the root element class, for
    // appending to children that are scoped within a modifier.
    // This is due to the unfortunate fact that node-sass has
    // a bug with the @at-root directive, and sass-lint explodes
    // as well. Ugh. Double whammy.
    //
    // @TODO: Refactor this to use the @at-root directive as soon
    // as a fix becomes available.
    $scoped-block-name: unquote("#{&}");
    display: block;
    position: relative;
    width: 100%;
    padding: ms(1) ms(5);
    transition: background-color anim(3);
    outline: none;

    @mixin button-states($hover, $active) {

        &:hover,
        &:focus {
            background-color: $hover;
        }

        &:active {
            box-shadow: inset 0 -3px 0 0 $active;
        }
    }

    &:disabled {
        cursor: not-allowed;
    }

    // ==========================================
    // Element Button Text
    // ==========================================
    %button-word-spacing {
        @include text-variant("0b");
        display: block;
        text-align: center;

    }

    &-text {
        @extend %button-word-spacing;
    }

    &-input {
        @extend %button-word-spacing;

        &[type="submit"],
        &[type="reset"],
        &[type="button"],
        &[type="file"] {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            width: 100%;
            opacity: 0;
            visibility: hidden;
        }
    }

    &-text {
        @include font-baseline-fix;
        line-height: ms(1);
    }

    // Modifier Solid Button Style
    // ==========================================
    &--solid {
        @include button-states(tint($color-greyscale-grey, 30%), shade($color-greyscale-grey, 10%));
        background-color: $color-greyscale-grey; // Default Color
        color: $color-greyscale-white;

        &:disabled,
        &.is-disabled {
            background-color: $color-greyscale-white-gainsboro !important; // We don't want the disabled state to get overridden, hence !important.
        }

        // Color Variants
        &#{$scoped-block-name}--yellowButtercup {
            @include button-states($color-brand-yellow-buttercup-tint, $color-brand-yellow-buttercup);
            background-color: $color-brand-yellow-buttercup;
        }

        &#{$scoped-block-name}--greenOracle {
            @include button-states($color-brand-green-oracle-tint, $color-brand-green-oracle);
            background-color: $color-brand-green-oracle;
        }

        &#{$scoped-block-name}--greenCyprus {
            @include button-states($color-brand-green-cyprus-tint, $color-brand-green-cyprus);
            background-color: $color-brand-green-cyprus;
        }
    }

    // Modifier Ghost/Bordered Button Style
    // ==========================================
    &--ghost,
    &--bordered {
        color: $color-greyscale-white;

        &:hover,
        &:focus {
            background-color: rgba(255, 255, 255, .2);
        }

        &:disabled {
            background-color: transparent;
            opacity: .3;
        }

        &:active {
            box-shadow: inset 0 -3px 0 0 rgba(255, 255, 255, .4);
        }
    }

    // Modifier Bordered Button Style
    // ==========================================
    &--bordered {
        border: rem(2) solid $color-greyscale-white;
    }

    // Modifier Icon Button Style
    // ==========================================
    &--icon {
        padding: ms(5);

        #{$scoped-block-name}-text {
            @include hide-text;
            height: 0;
            padding: 0;
        }

        #{$scoped-block-name}-iconViewport {
            display: block;
            position: relative;
            padding-top: 100%;
        }

        .Icon {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
        }
    }
}
